version: "3.8"

services:
  # One node-exporter per node (Server 2 and 3) to collect HOST metrics
  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.fs-types-exclude=^(tmpfs|devtmpfs|overlay|squashfs|ramfs|iso9660|bpf|nsfs|cgroup2?)$$'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc|run/docker/netns)($$|/)'
      # mounting rootfs is optional in newer versions, but helps filesystem collector
     # - '--collector.filesystem.rootfs'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    deploy:
      mode: global            # <- one per node (Server 2 AND Server 3)
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.platform.os == linux
    ports:
      - target: 9100
        published: 9100
        protocol: tcp
        mode: host            # each node listens on its own :9100
    networks: [monitor]

  # Export Kafka consumer lag; keep it on Server 3 (where Kafka runs)
  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    command:
      - '--kafka.server=10.0.0.210:29092'   # <--- set to your broker advertise/Bootstrap you already use
      - '--kafka.version=3.6.0'
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == server3      # <--- or use a node label if you prefer
      restart_policy:
        condition: any
    ports:
      - target: 9308
        published: 9308
        protocol: tcp
        mode: host
    networks: [monitor]

  # (Optional now, but here for when youâ€™re ready)
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - /opt/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - /opt/prometheus/rules:/etc/prometheus/rules:ro
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == server3
    ports:
      - target: 9090
        published: 9090
        mode: host
    networks: [monitor]

  alertmanager:
    image: prom/alertmanager:latest
    volumes:
      - /opt/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    secrets:
      - alertmanager_smtp_pass
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == server3
    ports:
      - target: 9093
        published: 9093
        mode: host
    networks: [monitor]

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=change-me-now         # set a strong one
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - /opt/grafana:/var/lib/grafana
      - /opt/grafana/provisioning:/etc/grafana/provisioning
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == server3                     # use your actual server3 hostname
    ports:
      - target: 3000
        published: 3000
        protocol: tcp
        mode: host
    networks: [monitor]


networks:
  monitor:
    driver: overlay

secrets:
  alertmanager_smtp_pass:
    external: true

